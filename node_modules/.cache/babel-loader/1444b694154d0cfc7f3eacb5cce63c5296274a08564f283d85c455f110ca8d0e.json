{"ast":null,"code":"import { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen p-4 bg-slate-100 text-black dark:bg-slate-900 dark:text-white grid grid-cols-3 grid-rows-[max-content_1fr] justify-center items-center grid-flow-row\"\n};\nconst _hoisted_2 = {\n  class: \"text-center text-3xl font-bold p-4 col-span-3\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-1 row-start-2 self-end\",\n  for: \"set-time-seconds\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-3 row-start-2 self-end\",\n  for: \"interval-select\"\n};\nimport { ref, onMounted } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\n\n// Reactive state variables\n\nexport default {\n  __name: 'App',\n  setup(__props) {\n    const started = ref(false);\n    const over = ref(false);\n    const whiteTurn = ref(true);\n    const blackTurn = ref(false);\n    const whiteTimeSeconds = ref(900);\n    const blackTimeSeconds = ref(900);\n    const blackTimeReadable = ref(\"00:00:00\");\n    const whiteTimeReadable = ref(\"00:00:00\");\n    const addingInterval = ref(10);\n    const selectedTimeSeconds = ref(900);\n    const activeWhite = ref(\"activeWhite\");\n    const activeBlack = ref(\"activeBlack\");\n    const inactiveWhite = ref(\"inactiveWhite\");\n    const inactiveBlack = ref(\"inactiveBlack\");\n    const win = ref(\"win\");\n    const lose = ref(\"lose\");\n    const whiteWin = ref(false);\n    const blackWin = ref(false);\n    const dropdownOpen = ref(false);\n    const target = ref(null);\n    let timerInterval = null;\n    function gameOver() {\n      over.value = true;\n      clearInterval(timerInterval);\n      if (whiteTurn.value) {\n        blackWin.value = true;\n        whiteWin.value = false;\n      } else if (blackTurn.value) {\n        whiteWin.value = true;\n        blackTurn.value = false;\n      }\n    }\n\n    // Function to set time in readable format\n    function setTimeReadable() {\n      blackTimeReadable.value = Math.floor(blackTimeSeconds.value / 3600).toString().padStart(2, \"0\") + \":\" + (Math.floor(blackTimeSeconds.value / 60) - Math.floor(blackTimeSeconds.value / 3600) * 60).toString().padStart(2, \"0\") + \":\" + Math.floor(blackTimeSeconds.value % 60).toString().padStart(2, \"0\");\n      whiteTimeReadable.value = Math.floor(whiteTimeSeconds.value / 3600).toString().padStart(2, \"0\") + \":\" + (Math.floor(whiteTimeSeconds.value / 60) - Math.floor(whiteTimeSeconds.value / 3600) * 60).toString().padStart(2, \"0\") + \":\" + Math.floor(whiteTimeSeconds.value % 60).toString().padStart(2, \"0\");\n    }\n\n    // Function to handle the black turn\n    function setTurn() {\n      if (whiteTurn.value) {\n        whiteTimeSeconds.value += addingInterval.value;\n        whiteTurn.value = false;\n        blackTurn.value = true;\n      } else if (blackTurn.value) {\n        blackTimeSeconds.value += addingInterval.value;\n        whiteTurn.value = true;\n        blackTurn.value = false;\n      }\n    }\n\n    // Start timer\n    function start() {\n      whiteTimeSeconds.value = selectedTimeSeconds.value;\n      blackTimeSeconds.value = selectedTimeSeconds.value;\n      setTimeReadable();\n      started.value = true;\n      over.value = false;\n      timerInterval = setInterval(() => {\n        if (blackTurn.value) {\n          blackTimeSeconds.value--;\n          setTimeReadable();\n          if (blackTimeSeconds.value <= 0) {\n            gameOver();\n          }\n        } else if (whiteTurn.value) {\n          whiteTimeSeconds.value--;\n          setTimeReadable();\n          if (whiteTimeSeconds.value <= 0) {\n            gameOver();\n          }\n        }\n      }, 1000);\n    }\n\n    // Stop timer\n    function stop() {\n      started.value = false;\n      over.value = true;\n      clearInterval(timerInterval);\n    }\n\n    // Close dropdown\n    function closeDropdown() {\n      dropdownOpen.value = false;\n    }\n    onMounted(() => {\n      onClickOutside(target, () => closeDropdown());\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"h1\", _hoisted_2, \" Welcome to the Chess Clock \", 512), [[_vShow, !started.value]]), !started.value ? (_openBlock(), _createElementBlock(\"label\", _hoisted_3, \" Start Time \")) : _createCommentVNode(\"\", true), !started.value ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n        key: 1,\n        class: \"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-1 self-start\",\n        id: \"set-time-seconds\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => selectedTimeSeconds.value = $event)\n      }, _cache[2] || (_cache[2] = [_createElementVNode(\"option\", {\n        value: 1800\n      }, \"30 Minutes\", -1), _createElementVNode(\"option\", {\n        value: 900\n      }, \"15 Minutes\", -1), _createElementVNode(\"option\", {\n        value: 600\n      }, \"10 Minutes\", -1), _createElementVNode(\"option\", {\n        value: 180\n      }, \"3 Minutes\", -1), _createElementVNode(\"option\", {\n        value: 60\n      }, \"1 Minute\", -1), _createElementVNode(\"option\", {\n        value: 30\n      }, \"30 Seconds\", -1)]), 512)), [[_vModelSelect, selectedTimeSeconds.value]]) : _createCommentVNode(\"\", true), !started.value ? (_openBlock(), _createElementBlock(\"label\", _hoisted_4, \" Interval \")) : _createCommentVNode(\"\", true), !started.value ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n        key: 3,\n        class: \"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-3 self-start\",\n        id: \"interval-select\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => addingInterval.value = $event)\n      }, _cache[3] || (_cache[3] = [_createElementVNode(\"option\", {\n        value: 10\n      }, \"10 Seconds\", -1), _createElementVNode(\"option\", {\n        value: 3\n      }, \"3 Seconds\", -1), _createElementVNode(\"option\", {\n        value: 2\n      }, \"2 Seconds\", -1), _createElementVNode(\"option\", {\n        value: 0\n      }, \"0 Seconds\", -1)]), 512)), [[_vModelSelect, addingInterval.value]]) : _createCommentVNode(\"\", true), !started.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 4,\n        class: \"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-span-3\",\n        onClick: start\n      }, \" Start \")) : _createCommentVNode(\"\", true), _withDirectives(_createElementVNode(\"button\", {\n        class: _normalizeClass({\n          [blackTurn.value ? activeBlack.value : inactiveBlack.value]: started.value,\n          [blackWin.value ? win.value : lose.value]: over.value\n        }),\n        onClick: setTurn\n      }, _toDisplayString(blackTimeReadable.value), 3), [[_vShow, started.value]]), started.value ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 5,\n        class: \"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 mx-5 border-gray-500 border-solid border-2\",\n        onClick: stop\n      }, \" Back \")) : _createCommentVNode(\"\", true), _withDirectives(_createElementVNode(\"button\", {\n        class: _normalizeClass({\n          [whiteTurn.value ? activeWhite.value : inactiveWhite.value]: started.value,\n          [whiteWin.value ? win.value : lose.value]: over.value\n        }),\n        onClick: setTurn\n      }, _toDisplayString(whiteTimeReadable.value), 3), [[_vShow, started.value]])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onClickOutside","started","over","whiteTurn","blackTurn","whiteTimeSeconds","blackTimeSeconds","blackTimeReadable","whiteTimeReadable","addingInterval","selectedTimeSeconds","activeWhite","activeBlack","inactiveWhite","inactiveBlack","win","lose","whiteWin","blackWin","dropdownOpen","target","timerInterval","gameOver","value","clearInterval","setTimeReadable","Math","floor","toString","padStart","setTurn","start","setInterval","stop","closeDropdown"],"sources":["C:/Users/abhis/OneDrive/Code/Website/chess-clock/src/App.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"min-h-screen p-4 bg-slate-100 text-black dark:bg-slate-900 dark:text-white grid grid-cols-3 grid-rows-[max-content_1fr] justify-center items-center grid-flow-row\"\r\n  >\r\n    <h1 class=\"text-center text-3xl font-bold p-4 col-span-3\" v-show=\"!started\">\r\n      Welcome to the Chess Clock\r\n    </h1>\r\n\r\n    <label\r\n      class=\"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-1 row-start-2 self-end\"\r\n      for=\"set-time-seconds\"\r\n      v-if=\"!started\"\r\n    >\r\n      Start Time\r\n    </label>\r\n    <select\r\n      class=\"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-1 self-start\"\r\n      id=\"set-time-seconds\"\r\n      v-model=\"selectedTimeSeconds\"\r\n      v-if=\"!started\"\r\n    >\r\n      <option :value=\"1800\">30 Minutes</option>\r\n      <option :value=\"900\">15 Minutes</option>\r\n      <option :value=\"600\">10 Minutes</option>\r\n      <option :value=\"180\">3 Minutes</option>\r\n      <option :value=\"60\">1 Minute</option>\r\n      <option :value=\"30\">30 Seconds</option>\r\n    </select>\r\n\r\n    <!-- Dropdown to change addingInterval -->\r\n    <label\r\n      class=\"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-3 row-start-2 self-end\"\r\n      for=\"interval-select\"\r\n      v-if=\"!started\"\r\n    >\r\n      Interval\r\n    </label>\r\n    <select\r\n      class=\"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-3 self-start\"\r\n      id=\"interval-select\"\r\n      v-model=\"addingInterval\"\r\n      v-if=\"!started\"\r\n    >\r\n      <option :value=\"10\">10 Seconds</option>\r\n      <option :value=\"3\">3 Seconds</option>\r\n      <option :value=\"2\">2 Seconds</option>\r\n      <option :value=\"0\">0 Seconds</option>\r\n    </select>\r\n\r\n    <button\r\n      class=\"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-span-3\"\r\n      @click=\"start\"\r\n      v-if=\"!started\"\r\n    >\r\n      Start\r\n    </button>\r\n\r\n    <button\r\n      :class=\"{\r\n        [blackTurn ? activeBlack : inactiveBlack]: started,\r\n        [blackWin ? win : lose]: over,\r\n      }\"\r\n      @click=\"setTurn\"\r\n      v-show=\"started\"\r\n    >\r\n      {{ blackTimeReadable }}\r\n    </button>\r\n\r\n    <button\r\n      class=\"text-center text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold font-mono p-6 mx-5 border-gray-500 border-solid border-2\"\r\n      @click=\"stop\"\r\n      v-if=\"started\"\r\n    >\r\n      Back\r\n    </button>\r\n\r\n    <button\r\n      :class=\"{\r\n        [whiteTurn ? activeWhite : inactiveWhite]: started,\r\n        [whiteWin ? win : lose]: over,\r\n      }\"\r\n      @click=\"setTurn\"\r\n      v-show=\"started\"\r\n    >\r\n      {{ whiteTimeReadable }}\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"js\">\r\nimport { ref, onMounted } from \"vue\";\r\nimport { onClickOutside } from \"@vueuse/core\";\r\n\r\n// Reactive state variables\r\nconst started = ref(false);\r\nconst over = ref(false);\r\nconst whiteTurn = ref(true);\r\nconst blackTurn = ref(false);\r\n\r\nconst whiteTimeSeconds = ref(900);\r\nconst blackTimeSeconds = ref(900);\r\nconst blackTimeReadable = ref(\"00:00:00\");\r\nconst whiteTimeReadable = ref(\"00:00:00\");\r\nconst addingInterval = ref(10);\r\n\r\nconst selectedTimeSeconds = ref(900);\r\n\r\nconst activeWhite = ref(\"activeWhite\");\r\nconst activeBlack = ref(\"activeBlack\");\r\nconst inactiveWhite = ref(\"inactiveWhite\");\r\nconst inactiveBlack = ref(\"inactiveBlack\");\r\nconst win = ref(\"win\");\r\nconst lose = ref(\"lose\");\r\n\r\nconst whiteWin = ref(false);\r\nconst blackWin = ref(false);\r\n\r\nconst dropdownOpen = ref(false);\r\nconst target = ref(null);\r\n\r\nlet timerInterval = null;\r\n\r\nfunction gameOver() {\r\n  over.value = true;\r\n  clearInterval(timerInterval);\r\n  if (whiteTurn.value) {\r\n    blackWin.value = true;\r\n    whiteWin.value = false;\r\n  } else if (blackTurn.value) {\r\n    whiteWin.value = true;\r\n    blackTurn.value = false;\r\n  }\r\n}\r\n\r\n// Function to set time in readable format\r\nfunction setTimeReadable() {\r\n  blackTimeReadable.value =\r\n    Math.floor(blackTimeSeconds.value / 3600)\r\n      .toString()\r\n      .padStart(2, \"0\") +\r\n    \":\" +\r\n    (Math.floor(blackTimeSeconds.value / 60) -\r\n      Math.floor(blackTimeSeconds.value / 3600) * 60)\r\n      .toString()\r\n      .padStart(2, \"0\") +\r\n    \":\" +\r\n    Math.floor(blackTimeSeconds.value % 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n  whiteTimeReadable.value =\r\n    Math.floor(whiteTimeSeconds.value / 3600)\r\n      .toString()\r\n      .padStart(2, \"0\") +\r\n    \":\" +\r\n    (Math.floor(whiteTimeSeconds.value / 60) -\r\n      Math.floor(whiteTimeSeconds.value / 3600) * 60)\r\n      .toString()\r\n      .padStart(2, \"0\") +\r\n    \":\" +\r\n    Math.floor(whiteTimeSeconds.value % 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n}\r\n\r\n// Function to handle the black turn\r\nfunction setTurn() {\r\n  if (whiteTurn.value) {\r\n    whiteTimeSeconds.value += addingInterval.value;\r\n    whiteTurn.value = false;\r\n    blackTurn.value = true;\r\n  } else if (blackTurn.value) {\r\n    blackTimeSeconds.value += addingInterval.value;\r\n    whiteTurn.value = true;\r\n    blackTurn.value = false;\r\n  }\r\n}\r\n\r\n// Start timer\r\nfunction start() {\r\n  whiteTimeSeconds.value = selectedTimeSeconds.value;\r\n  blackTimeSeconds.value = selectedTimeSeconds.value\r\n  setTimeReadable();\r\n  started.value = true;\r\n  over.value = false;\r\n  timerInterval = setInterval(() => {\r\n    if (blackTurn.value) {\r\n      blackTimeSeconds.value--;\r\n      setTimeReadable();\r\n      if (blackTimeSeconds.value <= 0) {\r\n        gameOver();\r\n      }\r\n    } else if (whiteTurn.value) {\r\n      whiteTimeSeconds.value--;\r\n      setTimeReadable();\r\n      if (whiteTimeSeconds.value <= 0) {\r\n        gameOver();\r\n      }\r\n    }\r\n  }, 1000);\r\n}\r\n\r\n// Stop timer\r\nfunction stop() {\r\n  started.value = false;\r\n  over.value = true;\r\n  clearInterval(timerInterval);\r\n}\r\n\r\n// Close dropdown\r\nfunction closeDropdown() {\r\n  dropdownOpen.value = false;\r\n}\r\n\r\nonMounted(() => {\r\n  onClickOutside(target, () => closeDropdown());\r\n});\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n.activeWhite {\r\n  @apply text-black bg-white text-center text-3xl font-bold font-mono h-52 mx-2 sm:mx-3 md:mx-4 lg:mx-4 xl:mx-6 border-gray-500 border-solid border-2 col-span-3;\r\n}\r\n\r\n.activeBlack {\r\n  @apply text-white bg-black text-center text-3xl font-bold font-mono h-60 mx-2 sm:mx-3 md:mx-4 lg:mx-4 xl:mx-6 border-gray-500 border-solid border-2 col-span-3;\r\n}\r\n\r\n.inactiveWhite {\r\n  @apply text-black bg-white bg-opacity-50 text-center text-2xl font-bold font-mono h-60 mx-2 sm:mx-3 md:mx-4 lg:mx-4 xl:mx-6 border-gray-500 border-solid border-2 col-span-3;\r\n}\r\n\r\n.inactiveBlack {\r\n  @apply text-white bg-black bg-opacity-50 text-center text-2xl font-bold font-mono h-52 mx-2 sm:mx-3 md:mx-4 lg:mx-4 xl:mx-6 border-gray-500 border-solid border-2 col-span-3;\r\n}\r\n\r\n.win {\r\n  @apply text-white bg-green-500 bg-opacity-50 text-center text-2xl font-bold font-mono h-52 mx-2 sm:mx-3 md:mx-4 lg:mx-4 xl:mx-6 border-gray-500 border-solid border-2 col-span-3;\r\n}\r\n\r\n.lose {\r\n  @apply text-black bg-red-500 bg-opacity-50 text-center text-2xl font-bold font-mono h-52 mx-2 sm:mx-3 md:mx-4 lg:mx-4 xl:mx-6 border-gray-500 border-solid border-2 col-span-3;\r\n}\r\n\r\nselect {\r\n  margin-bottom: 200px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}