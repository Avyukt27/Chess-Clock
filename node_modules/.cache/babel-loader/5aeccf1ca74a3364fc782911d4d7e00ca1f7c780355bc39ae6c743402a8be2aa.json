{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\n\n// Reactive state variables\n\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const started = ref(false);\n    const over = ref(true);\n    const whiteTurn = ref(true);\n    const blackTurn = ref(false);\n    const whiteTimeSeconds = ref(900);\n    const blackTimeSeconds = ref(900);\n    const blackTimeReadable = ref(\"00:00:00\");\n    const whiteTimeReadable = ref(\"00:00:00\");\n    const addingInterval = ref(10);\n    const selectedTimeSeconds = ref(900);\n    const activeWhite = ref(\"activeWhite\");\n    const activeBlack = ref(\"activeBlack\");\n    const inactiveWhite = ref(\"inactiveWhite\");\n    const inactiveBlack = ref(\"inactiveBlack\");\n    // const win = ref({backgroundColor: \"green\"});\n    // const lose = ref({backgroundColor: \"red\"});\n\n    const dropdownOpen = ref(false);\n    const target = ref(null);\n    let timerInterval = null;\n\n    // Function to set time in readable format\n    function setTimeReadable() {\n      blackTimeReadable.value = Math.floor(blackTimeSeconds.value / 3600).toString().padStart(2, \"0\") + \":\" + (Math.floor(blackTimeSeconds.value / 60) - Math.floor(blackTimeSeconds.value / 3600) * 60).toString().padStart(2, \"0\") + \":\" + Math.floor(blackTimeSeconds.value % 60).toString().padStart(2, \"0\");\n      whiteTimeReadable.value = Math.floor(whiteTimeSeconds.value / 3600).toString().padStart(2, \"0\") + \":\" + (Math.floor(whiteTimeSeconds.value / 60) - Math.floor(whiteTimeSeconds.value / 3600) * 60).toString().padStart(2, \"0\") + \":\" + Math.floor(whiteTimeSeconds.value % 60).toString().padStart(2, \"0\");\n    }\n\n    // Function to handle the black turn\n    function setTurnBlack() {\n      if (whiteTurn.value) {\n        whiteTimeSeconds.value += addingInterval.value;\n        whiteTurn.value = false;\n        blackTurn.value = true;\n      }\n    }\n\n    // Function to handle the white turn\n    function setTurnWhite() {\n      if (blackTurn.value) {\n        blackTimeSeconds.value += addingInterval.value;\n        whiteTurn.value = true;\n        blackTurn.value = false;\n      }\n    }\n\n    // Start timer\n    function start() {\n      whiteTimeSeconds.value = selectedTimeSeconds.value;\n      blackTimeSeconds.value = selectedTimeSeconds.value;\n      setTimeReadable();\n      started.value = true;\n      over.value = timerInterval = setInterval(() => {\n        if (blackTurn.value) {\n          blackTimeSeconds.value--;\n          setTimeReadable();\n        } else if (whiteTurn.value) {\n          whiteTimeSeconds.value--;\n          setTimeReadable();\n        }\n      }, 1000);\n    }\n\n    // Stop timer\n    function stop() {\n      started.value = false;\n      clearInterval(timerInterval);\n    }\n\n    // Close dropdown\n    function closeDropdown() {\n      dropdownOpen.value = false;\n    }\n    onMounted(() => {\n      onClickOutside(target, () => closeDropdown());\n    });\n    const __returned__ = {\n      started,\n      over,\n      whiteTurn,\n      blackTurn,\n      whiteTimeSeconds,\n      blackTimeSeconds,\n      blackTimeReadable,\n      whiteTimeReadable,\n      addingInterval,\n      selectedTimeSeconds,\n      activeWhite,\n      activeBlack,\n      inactiveWhite,\n      inactiveBlack,\n      dropdownOpen,\n      target,\n      get timerInterval() {\n        return timerInterval;\n      },\n      set timerInterval(v) {\n        timerInterval = v;\n      },\n      setTimeReadable,\n      setTurnBlack,\n      setTurnWhite,\n      start,\n      stop,\n      closeDropdown,\n      ref,\n      onMounted,\n      get onClickOutside() {\n        return onClickOutside;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onClickOutside","started","over","whiteTurn","blackTurn","whiteTimeSeconds","blackTimeSeconds","blackTimeReadable","whiteTimeReadable","addingInterval","selectedTimeSeconds","activeWhite","activeBlack","inactiveWhite","inactiveBlack","dropdownOpen","target","timerInterval","setTimeReadable","value","Math","floor","toString","padStart","setTurnBlack","setTurnWhite","start","setInterval","stop","clearInterval","closeDropdown"],"sources":["C:/Users/abhis/OneDrive/Code/Website/chess-clock/src/App.vue"],"sourcesContent":["<template>\n  <div\n    class=\"min-h-screen bg-slate-100 text-black dark:bg-slate-900 dark:text-white grid grid-cols-3 grid-rows-[max-content_1fr] justify-center items-center grid-flow-row\"\n  >\n    <h1 class=\"text-center text-3xl font-bold p-4 col-span-3\">\n      Welcome to the Chess Clock!\n    </h1>\n\n    <label\n      class=\"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-1 row-start-2 self-end\"\n      for=\"set-time-seconds\"\n      v-if=\"!started\"\n    >\n      Start Time\n    </label>\n    <select\n      class=\"text-center text-2xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-1 self-start\"\n      id=\"set-time-seconds\"\n      v-model=\"selectedTimeSeconds\"\n      v-if=\"!started\"\n    >\n      <option :value=\"1800\">30 Minutes</option>\n      <option :value=\"900\">15 Minutes</option>\n      <option :value=\"600\">10 Minutes</option>\n      <option :value=\"180\">3 Minutes</option>\n      <option :value=\"60\">1 Minute</option>\n      <option :value=\"30\">30 Seconds</option>\n    </select>\n\n    <!-- Dropdown to change addingInterval -->\n    <label\n      class=\"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-3 row-start-2 self-end\"\n      for=\"interval-select\"\n      v-if=\"!started\"\n    >\n      Interval\n    </label>\n    <select\n      class=\"text-center text-2xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-3 self-start\"\n      id=\"interval-select\"\n      v-model=\"addingInterval\"\n      v-if=\"!started\"\n    >\n      <option :value=\"10\">10 Seconds</option>\n      <option :value=\"3\">3 Seconds</option>\n      <option :value=\"2\">2 Seconds</option>\n      <option :value=\"0\">0 Seconds</option>\n    </select>\n\n    <button\n      class=\"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-span-3\"\n      @click=\"start\"\n      v-if=\"!started\"\n    >\n      Start\n    </button>\n\n    <button\n      :class=\"[blackTurn ? activeBlack : inactiveBlack]\"\n      @click=\"setTurnWhite\"\n      v-if=\"started && !over\"\n    >\n      {{ blackTimeReadable }}\n    </button>\n\n    <button\n      class=\"text-center text-2xl font-bold font-mono p-6 mx-5 border-gray-500 border-solid border-2\"\n      @click=\"stop\"\n      v-if=\"started\"\n    >\n      Back\n    </button>\n\n    <button\n      :class=\"[whiteTurn ? activeWhite : inactiveWhite]\"\n      @click=\"setTurnBlack\"\n      v-if=\"started && !over\"\n    >\n      {{ whiteTimeReadable }}\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"js\">\nimport { ref, onMounted } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\n\n// Reactive state variables\nconst started = ref(false);\nconst over = ref(true);\nconst whiteTurn = ref(true);\nconst blackTurn = ref(false);\n\nconst whiteTimeSeconds = ref(900);\nconst blackTimeSeconds = ref(900);\nconst blackTimeReadable = ref(\"00:00:00\");\nconst whiteTimeReadable = ref(\"00:00:00\");\nconst addingInterval = ref(10);\n\nconst selectedTimeSeconds = ref(900);\n\nconst activeWhite = ref(\"activeWhite\");\nconst activeBlack = ref(\"activeBlack\");\nconst inactiveWhite = ref(\"inactiveWhite\");\nconst inactiveBlack = ref(\"inactiveBlack\");\n// const win = ref({backgroundColor: \"green\"});\n// const lose = ref({backgroundColor: \"red\"});\n\nconst dropdownOpen = ref(false);\nconst target = ref(null);\n\nlet timerInterval = null;\n\n// Function to set time in readable format\nfunction setTimeReadable() {\n  blackTimeReadable.value =\n    Math.floor(blackTimeSeconds.value / 3600)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (Math.floor(blackTimeSeconds.value / 60) -\n      Math.floor(blackTimeSeconds.value / 3600) * 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    Math.floor(blackTimeSeconds.value % 60)\n      .toString()\n      .padStart(2, \"0\");\n  whiteTimeReadable.value =\n    Math.floor(whiteTimeSeconds.value / 3600)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (Math.floor(whiteTimeSeconds.value / 60) -\n      Math.floor(whiteTimeSeconds.value / 3600) * 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    Math.floor(whiteTimeSeconds.value % 60)\n      .toString()\n      .padStart(2, \"0\");\n}\n\n// Function to handle the black turn\nfunction setTurnBlack() {\n  if (whiteTurn.value) {\n    whiteTimeSeconds.value += addingInterval.value;\n    whiteTurn.value = false;\n    blackTurn.value = true;\n  }\n}\n\n// Function to handle the white turn\nfunction setTurnWhite() {\n  if (blackTurn.value) {\n    blackTimeSeconds.value += addingInterval.value;\n    whiteTurn.value = true;\n    blackTurn.value = false;\n  }\n}\n\n// Start timer\nfunction start() {\n  whiteTimeSeconds.value = selectedTimeSeconds.value;\n  blackTimeSeconds.value = selectedTimeSeconds.value\n  setTimeReadable();\n  started.value = true;\n  over.value = \n  timerInterval = setInterval(() => {\n    if (blackTurn.value) {\n      blackTimeSeconds.value--;\n      setTimeReadable();\n    } else if (whiteTurn.value) {\n      whiteTimeSeconds.value--;\n      setTimeReadable();\n    }\n  }, 1000);\n}\n\n// Stop timer\nfunction stop() {\n  started.value = false;\n  clearInterval(timerInterval);\n}\n\n// Close dropdown\nfunction closeDropdown() {\n  dropdownOpen.value = false;\n}\n\nonMounted(() => {\n  onClickOutside(target, () => closeDropdown());\n});\n</script>\n\n<style lang=\"css\" scoped>\n.activeWhite {\n  @apply text-black bg-white text-center text-3xl font-bold font-mono h-52 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\n.activeBlack {\n  @apply text-white bg-black text-center text-3xl font-bold font-mono h-60 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\n.inactiveWhite {\n  @apply text-black bg-white bg-opacity-50 text-center text-2xl font-bold font-mono h-60 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\n.inactiveBlack {\n  @apply text-white bg-black bg-opacity-50 text-center text-2xl font-bold font-mono h-52 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\nselect {\n  margin-bottom: 200px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}