{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-slate-100 text-black dark:bg-slate-900 dark:text-white grid grid-cols-3 grid-rows-[max-content_1fr] justify-center items-center grid-flow-row\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-1 row-start-2 self-end\",\n  for: \"set-time-seconds\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-3 row-start-2 self-end\",\n  for: \"interval-select\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", {\n    class: \"text-center text-3xl font-bold p-4 col-span-3\"\n  }, \" Welcome to the Chess Clock! \", -1 /* HOISTED */)), !_ctx.started ? (_openBlock(), _createElementBlock(\"label\", _hoisted_2, \" Start Time \")) : _createCommentVNode(\"v-if\", true), !_ctx.started ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 1,\n    class: \"text-center text-2xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-1 self-start\",\n    id: \"set-time-seconds\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedTimeSeconds = $event)\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"option\", {\n    value: 1800\n  }, \"30 Minutes\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 900\n  }, \"15 Minutes\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 600\n  }, \"10 Minutes\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 180\n  }, \"3 Minutes\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 60\n  }, \"1 Minute\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 30\n  }, \"30 Seconds\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */)), [[_vModelSelect, _ctx.selectedTimeSeconds]]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Dropdown to change addingInterval \"), !_ctx.started ? (_openBlock(), _createElementBlock(\"label\", _hoisted_3, \" Interval \")) : _createCommentVNode(\"v-if\", true), !_ctx.started ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 3,\n    class: \"text-center text-2xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-3 self-start\",\n    id: \"interval-select\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.addingInterval = $event)\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"option\", {\n    value: 10\n  }, \"10 Seconds\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 3\n  }, \"3 Seconds\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 2\n  }, \"2 Seconds\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 0\n  }, \"0 Seconds\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */)), [[_vModelSelect, _ctx.addingInterval]]) : _createCommentVNode(\"v-if\", true), !_ctx.started ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 4,\n    class: \"text-center text-2xl font-bold font-mono p-6 mx-96 border-gray-500 border-solid border-2 col-span-3\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.start && _ctx.start(...args))\n  }, \" Start \")) : _createCommentVNode(\"v-if\", true), _ctx.started ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 5,\n    class: _normalizeClass([_ctx.blackTurn ? _ctx.activeBlack : _ctx.inactiveBlack]),\n    style: \"\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.setTurnWhite && _ctx.setTurnWhite(...args))\n  }, _toDisplayString(_ctx.blackTimeReadable), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _ctx.started ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 6,\n    class: \"text-center text-2xl font-bold font-mono p-6 mx-5 border-gray-500 border-solid border-2\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.stop && _ctx.stop(...args))\n  }, \" Back \")) : _createCommentVNode(\"v-if\", true), _ctx.started ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 7,\n    class: _normalizeClass([_ctx.whiteTurn ? _ctx.activeWhite : _ctx.inactiveWhite]),\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.setTurnBlack && _ctx.setTurnBlack(...args))\n  }, _toDisplayString(_ctx.whiteTimeReadable), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","for","_createElementBlock","_hoisted_1","_createElementVNode","_ctx","started","_hoisted_2","_createCommentVNode","id","_cache","$event","selectedTimeSeconds","value","_hoisted_3","addingInterval","onClick","args","start","_normalizeClass","blackTurn","activeBlack","inactiveBlack","style","setTurnWhite","blackTimeReadable","stop","whiteTurn","activeWhite","inactiveWhite","setTurnBlack","whiteTimeReadable"],"sources":["C:\\Users\\abhis\\OneDrive\\Code\\Website\\chess-clock\\src\\App.vue"],"sourcesContent":["<template>\n  <div\n    class=\"min-h-screen bg-slate-100 text-black dark:bg-slate-900 dark:text-white grid grid-cols-3 grid-rows-[max-content_1fr] justify-center items-center grid-flow-row\"\n  >\n    <h1 class=\"text-center text-3xl font-bold p-4 col-span-3\">\n      Welcome to the Chess Clock!\n    </h1>\n\n    <label\n      class=\"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-1 row-start-2 self-end\"\n      for=\"set-time-seconds\"\n      v-if=\"!started\"\n    >\n      Start Time\n    </label>\n    <select\n      class=\"text-center text-2xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-1 self-start\"\n      id=\"set-time-seconds\"\n      v-model=\"selectedTimeSeconds\"\n      v-if=\"!started\"\n    >\n      <option :value=\"1800\">30 Minutes</option>\n      <option :value=\"900\">15 Minutes</option>\n      <option :value=\"600\">10 Minutes</option>\n      <option :value=\"180\">3 Minutes</option>\n      <option :value=\"60\">1 Minute</option>\n      <option :value=\"30\">30 Seconds</option>\n    </select>\n\n    <!-- Dropdown to change addingInterval -->\n    <label\n      class=\"text-center text-2xl font-bold font-mono p-6 border-gray-500 border-solid border-2 col-start-3 row-start-2 self-end\"\n      for=\"interval-select\"\n      v-if=\"!started\"\n    >\n      Interval\n    </label>\n    <select\n      class=\"text-center text-2xl bg-black text-white font-bold font-mono p-6 my-4 border-gray-500 border-solid border-2 row-start-3 col-start-3 self-start\"\n      id=\"interval-select\"\n      v-model=\"addingInterval\"\n      v-if=\"!started\"\n    >\n      <option :value=\"10\">10 Seconds</option>\n      <option :value=\"3\">3 Seconds</option>\n      <option :value=\"2\">2 Seconds</option>\n      <option :value=\"0\">0 Seconds</option>\n    </select>\n\n    <button\n      class=\"text-center text-2xl font-bold font-mono p-6 mx-96 border-gray-500 border-solid border-2 col-span-3\"\n      @click=\"start\"\n      v-if=\"!started\"\n    >\n      Start\n    </button>\n\n    <button\n      :class=\"[blackTurn ? activeBlack : inactiveBlack]\"\n      :style=\"\"\n      @click=\"setTurnWhite\"\n      v-if=\"started\"\n    >\n      {{ blackTimeReadable }}\n    </button>\n\n    <button\n      class=\"text-center text-2xl font-bold font-mono p-6 mx-5 border-gray-500 border-solid border-2\"\n      @click=\"stop\"\n      v-if=\"started\"\n    >\n      Back\n    </button>\n\n    <button\n      :class=\"[whiteTurn ? activeWhite : inactiveWhite]\"\n      @click=\"setTurnBlack\"\n      v-if=\"started\"\n    >\n      {{ whiteTimeReadable }}\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"js\">\nimport { ref, onMounted } from \"vue\";\nimport { onClickOutside } from \"@vueuse/core\";\n\n// Reactive state variables\nconst started = ref(false);\nconst whiteTurn = ref(true);\nconst blackTurn = ref(false);\n\nconst whiteTimeSeconds = ref(900);\nconst blackTimeSeconds = ref(900);\nconst blackTimeReadable = ref(\"00:00:00\");\nconst whiteTimeReadable = ref(\"00:00:00\");\nconst addingInterval = ref(10);\n\nconst blackWin = ref(false);\nconst blackLose = ref(false);\nconst whiteWin = ref(false);\nconst blackWin\n\nconst selectedTimeSeconds = ref(900);\n\nconst activeWhite = ref(\"activeWhite\");\nconst activeBlack = ref(\"activeBlack\");\nconst inactiveWhite = ref(\"inactiveWhite\");\nconst inactiveBlack = ref(\"inactiveBlack\");\nconst win = ref({backgroundColor: \"green\"});\nconst lose = ref({backgroundColor: \"red\"});\n\nconst dropdownOpen = ref(false);\nconst target = ref(null);\n\nlet timerInterval = null;\n\n// Function to set time in readable format\nfunction setTimeReadable() {\n  blackTimeReadable.value =\n    Math.floor(blackTimeSeconds.value / 3600)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (Math.floor(blackTimeSeconds.value / 60) -\n      Math.floor(blackTimeSeconds.value / 3600) * 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    Math.floor(blackTimeSeconds.value % 60)\n      .toString()\n      .padStart(2, \"0\");\n  whiteTimeReadable.value =\n    Math.floor(whiteTimeSeconds.value / 3600)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    (Math.floor(whiteTimeSeconds.value / 60) -\n      Math.floor(whiteTimeSeconds.value / 3600) * 60)\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    Math.floor(whiteTimeSeconds.value % 60)\n      .toString()\n      .padStart(2, \"0\");\n}\n\n// Function to handle the black turn\nfunction setTurnBlack() {\n  if (whiteTurn.value) {\n    whiteTimeSeconds.value += addingInterval.value;\n    whiteTurn.value = false;\n    blackTurn.value = true;\n  }\n}\n\n// Function to handle the white turn\nfunction setTurnWhite() {\n  if (blackTurn.value) {\n    blackTimeSeconds.value += addingInterval.value;\n    whiteTurn.value = true;\n    blackTurn.value = false;\n  }\n}\n\n// Start timer\nfunction start() {\n  whiteTimeSeconds.value = selectedTimeSeconds.value;\n  blackTimeSeconds.value = selectedTimeSeconds.value\n  setTimeReadable();\n  started.value = true;\n  timerInterval = setInterval(() => {\n    if (blackTurn.value) {\n      blackTimeSeconds.value--;\n      setTimeReadable();\n    } else if (whiteTurn.value) {\n      whiteTimeSeconds.value--;\n      setTimeReadable();\n    }\n  }, 1000);\n}\n\n// Stop timer\nfunction stop() {\n  started.value = false;\n  clearInterval(timerInterval);\n}\n\n// Close dropdown\nfunction closeDropdown() {\n  dropdownOpen.value = false;\n}\n\nonMounted(() => {\n  onClickOutside(target, () => closeDropdown());\n});\n</script>\n\n<style lang=\"css\" scoped>\n.activeWhite {\n  @apply text-black bg-white text-center text-3xl font-bold font-mono h-52 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\n.activeBlack {\n  @apply text-white bg-black text-center text-3xl font-bold font-mono h-60 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\n.inactiveWhite {\n  @apply text-black bg-white bg-opacity-50 text-center text-2xl font-bold font-mono h-60 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\n.inactiveBlack {\n  @apply text-white bg-black bg-opacity-50 text-center text-2xl font-bold font-mono h-52 m-4 border-gray-500 border-solid border-2 col-span-3 mx-96;\n}\n\nselect {\n  margin-bottom: 200px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}